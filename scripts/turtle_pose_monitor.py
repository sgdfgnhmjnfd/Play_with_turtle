#!/usr/bin/env python3

import rospy
from turtlesim.msg import Pose

# K√≠ch th∆∞·ªõc c·ª≠a s·ªï turtlesim (chu·∫©n l√† 11x11)
WALL_LIMIT = 11.0
SAFE_DISTANCE = 0.4  # B√°o WARNING khi c√≤n c√°ch t∆∞·ªùng 0.3m - 0.4m
DANGER_DISTANCE = 0.3  # B√°o ERROR khi c√≤n c√°ch t∆∞·ªùng d∆∞·ªõi 0.3m

def pose_callback(pose):
    x, y = pose.x, pose.y

    # T√≠nh kho·∫£ng c√°ch ƒë·∫øn c√°c b·ª©c t∆∞·ªùng
    dist_left   = x
    dist_right  = WALL_LIMIT - x
    dist_bottom = y
    dist_top    = WALL_LIMIT - y

    # L·∫•y kho·∫£ng c√°ch ng·∫Øn nh·∫•t ƒë·∫øn t∆∞·ªùng
    min_dist = min(dist_left, dist_right, dist_bottom, dist_top)

    # Hi·ªÉn th·ªã v·ªã tr√≠ r√πa
    rospy.loginfo(f"R√πa ·ªü v·ªã tr√≠ (x={x:.2f}, y={y:.2f})")

    # Ki·ªÉm tra c·∫£nh b√°o
    if DANGER_DISTANCE <= min_dist <= SAFE_DISTANCE:
        rospy.logwarn("‚ö†Ô∏è The turtle is approaching the wall!!")
    elif min_dist < DANGER_DISTANCE:
        rospy.logerr("üö® Too close to the wall! Collision risk!!")

def listener():
    rospy.init_node('turtle_pose_monitor', anonymous=True)
    rospy.Subscriber('/turtle1/pose', Pose, pose_callback)
    rospy.spin()

if __name__ == '__main__':
    listener()
